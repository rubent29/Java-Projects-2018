/*
Author: Ruben Torrico
Date: 11/25/18
Program: Valley Depot Employee Software
Description: Valley Depot Hardware Shop company software to run store operations
 */

package javaGroupPA;
import java.util.*;
import java.util.ArrayList;
import java.nio.*;
import javax.swing.event.*;
import javax.xml.crypto.*;

public class FinalValleyDepotApp {
    public static void main(String[] args) {
		//Make scanner and menu response
		Scanner scan = new Scanner(System.in);
		int mainMenuResponse = 11;
		
		//Make an array for each type of object we created to store these instance objects
		ArrayList<Customer> customerArray = new ArrayList<Customer>(50);
		ArrayList<Vendor> vendorArray = new ArrayList<Vendor>(50);
		ArrayList<Item> itemArray = new ArrayList<Item>(50);
		ArrayList<Sale> saleArray = new ArrayList<Sale>(50);
		ArrayList<Transaction> transactionArray = new ArrayList<Transaction>(50);

		//Create Sample Customers
		Customer customer0 = new Customer ("Jeremy", "Ezell", "220 Showker", "5405683222", "ezelljd@jmu.edu", "valued customer");
		customerArray.add(customer0);
		Customer customer1 = new Customer ("Tommy", "Tutone", "550 San Francisco", "5558675309", "jenny@dontchangeyourmind.com","valued customer");
		customerArray.add(customer1);
		Customer customer2 = new Customer ("Freddie", "Mercury", "500 WeAreTheChampions Drive", "8005551212", "dontstopme@now.com","valued customer");
		customerArray.add(customer2);
		Customer customer3 = new Customer ("Elton", "John", "100 Tiny Dancer", "8006662344", "piano@man.com","valued customer");
		customerArray.add(customer3);
		Contractor contractor0 = new Contractor ("Michael", "Busch", "Hard Hat Company", "401 Hanson Hall", "5553332222", "buschmj@jmu.edu","valued customer");
		customerArray.add(contractor0);
		
		//Create Sample Vendors
		Vendor vendor0 = new Vendor ("Lowes", "201 Linda Ln", "5404337660");
		vendorArray.add(vendor0);
		Vendor vendor1  = new Vendor ("Home Depot", "121 Burgess Rd", "5404388887");
		vendorArray.add(vendor1);
		Vendor vendor2  = new Vendor ("Valley Building Supply", "10 Stone Spring Rd", "5404346725");
		vendorArray.add(vendor2);
				
		//Create Sample Items
		Item item0 = new Item("Plywood", 23.56, 10.00, 20.00,"Sheet Material Made From Thin Layers of Wood", 100,vendorArray.get(0));
		itemArray.add(item0);
		Item item1 = new Item("Metal", 56.24, 5.00, 10.00,"Small Diamond tread Aluminum Sheet in Silver", 200,vendorArray.get(1));
		itemArray.add(item1);
		Item item2 = new Item("Paint", 8.56, 4.00, 8.00,"Semi-Gloss Interior Paint", 150, vendorArray.get(1));
		itemArray.add(item2);
		Item item3 = new Item("Cement", 5.95, 3.00, 6.00,"Grey Cement Mix", 400, vendorArray.get(0));
		itemArray.add(item3);
		Item item4 = new Item("Putty", 7.56, 0.22, 1.56,"Concrete 6 Inch Block", 300, vendorArray.get(0));
		itemArray.add(item4);
		Item item5 = new Item("PVC", 0.78, 1.56, 12.98,"Cuts PVC Piping", 200, vendorArray.get(2));
		itemArray.add(item5);
		Item item6 = new Item("Mulch", 8.98, 0.10, 3.75,"Brown Mulch", 200, vendorArray.get(1));
		itemArray.add(item6);
		Item item7 = new Item("Drywall", 20.39, 2.99, 13.48,"4x10 Feet Drywall Sheet", 200, vendorArray.get(0));
		itemArray.add(item7);
		Item item8 = new Item("Tape", 3.45, 3.75, 10.99,"Single Sided Tape", 130, vendorArray.get(2));
		itemArray.add(item8);
		Item item9 = new Item("Knife", 1.39, 1.79, 10.98,"Silver Blade", 120, vendorArray.get(1));
		itemArray.add(item9);
		
		//Create Sample Sales
		Sale sale0 = new Sale (customerArray.get(0), itemArray.get(0), 1, "06/02/2018");
		saleArray.add(sale0);
		Sale sale1 = new Sale (customerArray.get(0), itemArray.get(1), 1, "06/02/2018");
		saleArray.add(sale1);
		Sale sale2 = new Sale (customerArray.get(1), itemArray.get(2), 2, "07/12/2018");
		saleArray.add(sale2);
		Sale sale3 = new Sale (customerArray.get(1), itemArray.get(3), 1, "07/12/2018");
		saleArray.add(sale3);
		Sale sale4 = new Sale (customerArray.get(2), itemArray.get(1), 1, "08/14/2018");
		saleArray.add(sale4);
		Sale sale5 = new Sale (customerArray.get(0), itemArray.get(0), 1, "09/15/2018");
		saleArray.add(sale5);
		Sale sale6 = new Sale (customerArray.get(1), itemArray.get(1), 1, "10/16/2018");
		saleArray.add(sale6);
		
		//Create Sample Transactions
		Transaction transaction0 = new Transaction (customerArray.get(0), "06/02/2018", 30.0);
		transactionArray.add(transaction0);
		Transaction transaction1 = new Transaction (customerArray.get(1), "07/12/2018", 22.0);
		transactionArray.add(transaction1);
		Transaction transaction2 = new Transaction (customerArray.get(2), "08/14/2018", 10.0);
		transactionArray.add(transaction2);
		Transaction transaction3 = new Transaction (customerArray.get(0), "09/15/2018", 20.0);
		transactionArray.add(transaction3);
		Transaction transaction4 = new Transaction (customerArray.get(1), "10/16/2018", 10.0);
		transactionArray.add(transaction4);
		
		
		//Fill the transaction arrays with the sales (Fill the array inside each transaction with a sale)
		transactionArray.get(0).getSaleArrayInTransaction().add(sale0);
		transactionArray.get(0).getSaleArrayInTransaction().add(sale1);
		transactionArray.get(1).getSaleArrayInTransaction().add(sale2);
		transactionArray.get(1).getSaleArrayInTransaction().add(sale3);
		transactionArray.get(2).getSaleArrayInTransaction().add(sale4);
		transactionArray.get(3).getSaleArrayInTransaction().add(sale5);
		transactionArray.get(4).getSaleArrayInTransaction().add(sale6);


		//While user doesnt enter 0, repeat the main menu
		while (mainMenuResponse != 0)
		{
			//Print Main Menu
			System.out.println("********************************************************");
			System.out.println("          Welcome to Valley Depot IS Main Menu");
			System.out.println("********************************************************");
			System.out.println("Please select your choice of the following menu options:");
			System.out.println("\t1: Add a New Customer");
			System.out.println("\t2: Edit a Customer's Data");
			System.out.println("\t3: Add New Item");
			System.out.println("\t4: Edit an Item's Data");
			System.out.println("\t5: Add a New Transaction (Consists of One or Muiltiple Sales)");
			System.out.println("\t6: Add a New Vendor");
			System.out.println("\t7: Edit a Vendor's Data");
			System.out.println("\t8: Report Menu");
			System.out.println("\t0: Exit the Application");
			System.out.print("Please Enter Your Menu Selection: ");
			mainMenuResponse = scan.nextInt();
			scan.nextLine();

		
			if (mainMenuResponse == 1)
			{
				System.out.println("You have selected Add a New Customer");
				System.out.println("Please Select the Type of Customer You Wish to Enter"); //Option between two types of customers
				System.out.println("\t0: Add Individual Customer");
				System.out.println("\t1: Add Business/Contractor Customer");
				System.out.print("Enter Choice: ");
				int newCustomerResponse = scan.nextInt();
				scan.nextLine();

				//System asks for each attribute for a new customer.  System Records these attributes. 
				if (newCustomerResponse == 0)
				{
					System.out.println("You have Selected Add a New Individual Customer");
					System.out.print("Enter the Customer's First Name: ");
					String customerFirst = scan.nextLine();
					if (customerFirst.isEmpty() == true) //Makes sure name is not empty.   THIS FUNCTION REPEATS.
						customerFirst = fillAnEmptyName();
					
					System.out.print("Enter the Customer's Last Name: ");
					String customerlast = scan.nextLine();
					if (customerlast.isEmpty() == true)
						customerlast = fillAnEmptyName();
					
					System.out.print("Enter the Customer's Street Address: ");
					String customerAddress = scan.nextLine();
				
					System.out.print("Enter the Customer's Phone Number (10 Digits): ");
					String customerPhone = scan.nextLine(); 
					
					//Make sure phone length is 10 digits.  THIS FUNCTION REPEATS
					while (customerPhone.length() != 10)
					{
						System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
						System.out.print("Enter the Customer's Phone Number (10 Digits): ");
						customerPhone = scan.nextLine(); 
					}
					
					System.out.print("Enter the Customer's Email Address: ");
					String customerEmail = scan.nextLine();
                                        
                                        System.out.print("Enter the Customer Notes: ");
					String cNotes = scan.nextLine(); 
					
					//Make a new Customer with gathered data. Store it in Customer Array
					Customer tempCustomer = new Customer(customerFirst, customerlast, customerAddress, customerPhone, customerEmail, cNotes);
					customerArray.add(tempCustomer);
				}
				
				//System asks for each attribute for a new contractor.  System Records these attributes. 
				else if (newCustomerResponse == 1)
				{
					System.out.println("You have Selected Add a New Contractor");
					System.out.print("Enter the Contractor/Business Owner's First Name: ");
					String businessOwnerFirst = scan.nextLine();
					if (businessOwnerFirst.isEmpty() == true) 
						businessOwnerFirst = fillAnEmptyName();
					
					System.out.print("Enter the Contractor/Business Owner's Last Name: ");
					String businessOwnerLast = scan.nextLine();
					if (businessOwnerLast.isEmpty() == true)
						businessOwnerLast = fillAnEmptyName();
					
					System.out.print("Enter the Buiness Name: ");
					String businessName = scan.nextLine();
					if (businessName.isEmpty() == true)
						businessName = fillAnEmptyName();
											
					System.out.print("Enter the Business Street Address: ");
					String businessAddress = scan.nextLine();
					
					System.out.print("Enter the Contractor/Business Owners's Phone Number (10 Digits):  ");
					String businessphoneNum = scan.nextLine();
										
					while (businessphoneNum.length() != 10)
					{
						System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
						System.out.print("Enter the Contractor/Business Owners's Phone Number (10 Digits):  ");
						businessphoneNum = scan.nextLine();
					}
					
					
					System.out.print("Enter the Contractor/Business's Email Address: ");
					String businessEmailAddress = scan.nextLine();
                                        
					System.out.print("Enter the Contractor Notes: ");
					String cNotes = scan.nextLine(); 
                                        
					//Make a Contractor with gathered data.  Store it in Customer Array
					Contractor tempContractor = new Contractor (businessOwnerFirst, businessOwnerLast, businessName, businessAddress, businessphoneNum, businessEmailAddress, cNotes);
					customerArray.add(tempContractor);
				}
				
				else
				{
					System.out.println("Incorrect Customer Choice Option Selected.  Please Select 1 from the Main Menu and Try Again");
				}
			}
			
			
			else if (mainMenuResponse == 2)
			{
				//Menu for changing a customer/contractor's data
				System.out.println("You Have Selected Edit a Customer's Data");
				System.out.println("Please Select the Type of Customer You Wish to Edit");
				System.out.println("\t0: Add Individual Customer");
				System.out.println("\t1: Add Business/Contractor Customer");
				System.out.print("Enter Choice: ");
				int editCustomerResponse = scan.nextInt();
				scan.nextLine();

				//Change Customer Data
				//System prints all customers, user selects the customer to change attributes of. 
				//System asks for what attribute needs to be changed.  
				//System asks for what this attribute needs to be changed to. 
				//System changes it. 
				if (editCustomerResponse == 0)
				{					
					System.out.println("\nLIST OF CUSTOMERS:");
					System.out.println("------------------------------");
					System.out.println("Customer ID:\tCustomer Name:\t ");
					System.out.println("------------------------------");	
					
					for (int i = 0; i < customerArray.size(); i++)
					{
						if (customerArray.get(i).getCustomerID() < 100)
						{
							System.out.println(customerArray.get(i).getCustomerID() + "\t\t" + customerArray.get(i).getCustomerFirstandLast());
						}
					}
					
					System.out.print("\nPlease Select the ID of the Customer You Would Like to Change Aspects of: " );
					int changeCustomerID = scan.nextInt();
					scan.nextLine();

					System.out.println("Selected Customer Attributes: " + customerArray.get(changeCustomerID).printEverything());
					System.out.println("Please Select Which Customer Aspect You Would Like to Change");
					System.out.println("\t1: Change the Customer's Fist Name");
					System.out.println("\t2: Change the Customer's Last Name");
					System.out.println("\t3: Change the Customer's Address");
					System.out.println("\t4: Change the Customer's Phone");
					System.out.println("\t5: Change the Customer's Email");
					System.out.print("Please Select 1 - 5: ");
					int changeCustomerResponse = scan.nextInt();
					scan.nextLine();

					if (changeCustomerResponse ==1)
					{
						System.out.print("Please Enter What You Want to Change the Customer's First Name to: ");
						String newCustomerFirstName = scan.nextLine();
						if (newCustomerFirstName.isEmpty() == true)
							newCustomerFirstName = fillAnEmptyName();
						customerArray.get(changeCustomerID).setCustomerFirstName(newCustomerFirstName);
					}
					
					else if (changeCustomerResponse ==2)
					{
						System.out.print("Please Enter What You Want to Change the Customer's Last Name to: ");
						String newCustomerLastName = scan.nextLine();
						if (newCustomerLastName.isEmpty() == true)
							newCustomerLastName = fillAnEmptyName();
						customerArray.get(changeCustomerID).setCustomerLastName(newCustomerLastName);	
					}
					
					else if (changeCustomerResponse ==3)
					{
						System.out.print("Please Enter What You Want to Change the Customer's Address to: ");
						String newCustomerAddress = scan.nextLine();
						
						customerArray.get(changeCustomerID).setCustomerAddress(newCustomerAddress);	
					}
					
					else if (changeCustomerResponse ==4)
					{
						System.out.print("Please Enter What You Want to Change the Customer's Phone to (10 Digits): ");
						String newCustomerPhone = scan.nextLine();
						
						while (newCustomerPhone.length() != 10)
						{
							System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
							System.out.print("Please Enter What You Want to Change the Customer's Phone to (10 Digits): ");
							newCustomerPhone = scan.nextLine();
						}
						
						customerArray.get(changeCustomerID).setCustomerPhone(newCustomerPhone);	
					}
					
					else if (changeCustomerResponse ==5)
					{
						System.out.print("Please Enter What You Want to Change the Customer's Email to: ");
						String newCustomerEmail = scan.nextLine();
						customerArray.get(changeCustomerID).setCustomerEmail(newCustomerEmail);	
					}
					
					else 
					{
						System.out.print("Incorrect Change Customer Attribute Selected.  Please Select 2 From the Main Menu and Try Again");
					}
				}
					
				//Change Contractor Data	
				//System prints all contractors, user selects the contractor to change attributes of. 
				//System asks for what attribute needs to be changed.  
				//System asks for what this attribute needs to be changed to. 
				//System changes it. 
				else if (editCustomerResponse == 1)
				{						
					System.out.println("\nLIST OF CONTRACTORS:");
					System.out.println("-----------------------------");
					System.out.println("Contractor ID:\tCustomer Name:");
					System.out.println("-----------------------------");	
					
					//Print only contractors.  Contractors have a Customer ID greater than 99. 
					for (int i = 0; i < customerArray.size(); i++)
					{
						if (customerArray.get(i).getCustomerID() > 99)
						{
							System.out.println(customerArray.get(i).getCustomerID() + "\t\t" + customerArray.get(i).getCustomerFirstandLast());
						}
					}
									
					System.out.print("\nPlease Select the ID of the Contractor You Would Like to Change Aspects of: ");
					int changeContractorID = scan.nextInt();
					scan.nextLine();

					changeContractorID -= 100; //Minue 100 to get the position the contractor is in the contractor array
					System.out.println("Selected Contractor Attributes: " + customerArray.get(changeContractorID).printEverything());
					System.out.println("Please Select Which Contractor Aspect You Would Like to Change");
					System.out.println("\t1: Change the Contractor's First Name (Owner)");
					System.out.println("\t2: Change the Contractor's Last Name (Owner)");
					System.out.println("\t3: Change the Contractor's Business Name");
					System.out.println("\t4: Change the Contractor's Business Address");
					System.out.println("\t5: Change the Contractor's Phone");
					System.out.println("\t6: Change the Contractor's Email");
					System.out.print("Please Select 1 - 6: ");
					int changeCustomerResponse = scan.nextInt();
					scan.nextLine();


					if (changeCustomerResponse == 1)
					{
						System.out.print("Please Enter What You Want to Change the Contractor's First Name (Owner) to: " );
						String newContFirstName = scan.nextLine();		
						if (newContFirstName.isEmpty() == true)
							newContFirstName = fillAnEmptyName();				
						customerArray.get(changeContractorID).setCustomerFirstName(newContFirstName);
					}
					
					else if (changeCustomerResponse == 2)			
					{
						System.out.print("Please Enter What You Want to Change the Contractor's Last Name (Owner) to: " );
						String newContLastName = scan.nextLine();
						if (newContLastName.isEmpty() == true)
							newContLastName = fillAnEmptyName();							
						customerArray.get(changeContractorID).setCustomerLastName(newContLastName);	
					}
					
					else if (changeCustomerResponse == 3)
					{
						System.out.print("Please Enter What You Want to Change the Contractor's Business Name to: " );
						String newBusinessName = scan.nextLine();			
						if (newBusinessName.isEmpty() == true)
							newBusinessName = fillAnEmptyName();				
						Contractor tempContractor = (Contractor)customerArray.get(changeContractorID);
						tempContractor.setBusinessName(newBusinessName);	
					}
					
					else if (changeCustomerResponse ==4)
					{
						System.out.print("Please Enter What You Want to Change the Contractor's Business Address to: " );
						String newBusinessAddress = scan.nextLine();
						Contractor tempContractor = (Contractor)customerArray.get(changeContractorID);
						tempContractor.setBusinessAddress(newBusinessAddress);
					}
					
					else if (changeCustomerResponse ==5)
					{
						System.out.print("Please Enter What You Want to Change the Contractor's Phone to (10 Digits):  ");
						String newPhone = scan.nextLine();
						
						while (newPhone.length() != 10)
						{
							System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
							System.out.print("Please Enter What You Want to Change the Contractor's Phone to (10 Digits):  ");
							newPhone = scan.nextLine();
						}
						
						customerArray.get(changeContractorID).setCustomerPhone(newPhone);	
					}
					
					else if (changeCustomerResponse == 6)
					{
						System.out.print("Please Enter What You Want to Change the Contractor's Email to: ");
						String newEmail = scan.nextLine();
						customerArray.get(changeContractorID).setCustomerEmail(newEmail);	
					}
					
					else 
					{
						System.out.println("Incorrect Change Contractor Attribute Selected to Edit.  Please Select 2 From the Main Menu and Try Again");
					}
				}
			else
			{
				System.out.println("Incorrect Change Customer Type Selected.  Please Select 2 From the Main Menu and Try Again");
			}
			}

			else if (mainMenuResponse == 3)
			{
				//Adding a new item procedure. Ask for each attribute of a new item. Store this data
				System.out.println("You Have Selected Add a New Item");
				System.out.print("Enter the Item Name: " );
				String itemName = scan.nextLine();
				
				if (itemName.isEmpty() == true)
					itemName = fillAnEmptyName();
				System.out.print("Enter the Item's Weight: ");
				double itemWeight = scan.nextDouble();
				scan.nextLine();

				System.out.print("Enter the Item's Price Paid: ");
				double itemPricePaid = scan.nextDouble();
				scan.nextLine();

				System.out.print("Enter the Item's For Sale Price: ");
				double itemForSalePrice = scan.nextDouble();
				scan.nextLine();

				System.out.print("Enter the Item's Description: " );
				String itemDescription = scan.nextLine();
				System.out.print("Enter the Item's Inventory Level: ");
				int itemInventoryLevel = scan.nextInt();
				scan.nextLine();

				//List all vendors for the user can select which vendor to add to the new item's attributes
				System.out.println("\nLIST OF VENDORS:"); //Print all vendors 
				System.out.println("----------------------------");
				System.out.println("Vendor ID:\tVendor Name:");
				System.out.println("----------------------------");
				for (int i = 0; i < vendorArray.size(); i++)
				{
					System.out.println(vendorArray.get(i).getVendorID() + "\t" + vendorArray.get(i).getVendorName());
				}

				System.out.print("\nPlease Enter the Vendor ID for the Item: ");
				int itemVendor = scan.nextInt();
				itemVendor -= 400; //Minus 400 to get the index position the wanted vendor is in with reguards to the vendor array. 
		
				//Make a new item with stored data.  Add this to the item array. 
				Item tempItem = new Item(itemName, itemWeight, itemPricePaid, itemForSalePrice, itemDescription, itemInventoryLevel, vendorArray.get(itemVendor));
				itemArray.add(tempItem);
			}
			

			else if (mainMenuResponse == 4)
			{
				//Edit an item menu. 
				//System prints all items, user selects the item to change attributes of. 
				//System asks for what attribute needs to be changed.  
				//System asks for what this attribute needs to be changed to. 
				//System changes it. 
				System.out.println("You Have Selected Edit an Item's Data");
				System.out.println("\nLIST OF ITEMS:");
				System.out.println("--------------------------");
				System.out.println("Item ID:\tItem Name:");
				System.out.println("--------------------------");	
			
				for (int i = 0; i < itemArray.size(); i++)
				{
					System.out.println(itemArray.get(i).getItemID() + "\t\t" + itemArray.get(i).getItemName());
				}

				System.out.print("\nPlease Enter ID of the Item You Would Like to Change Aspects of: ");
				int changeItemID = scan.nextInt();
				scan.nextLine();
				changeItemID -=200;
				System.out.println("Please Select Which Customer Aspect You Would Like to Change: ");
				System.out.println("\t 1: Change the Item's Name");
				System.out.println("\t 2: Change the Item's Weight");
				System.out.println("\t 3: Change the Item's Price Paid");
				System.out.println("\t 4: Change the Item's For Sale Price");
				System.out.println("\t 5: Change the Item's Description");
				System.out.println("\t 6: Change the Item's Inventory Level");
				System.out.println("\t 7: Change the Item's Vendor");
				System.out.print("Please Enter 1-7: ");
				int changeItemResponse =scan.nextInt();
				scan.nextLine();

				
				if (changeItemResponse == 1)
				{
					System.out.print("Please Enter What You Want to Change the Item's Name To: " );
					String newItemName = scan.nextLine();
					if (newItemName.isEmpty() == true)
						newItemName = fillAnEmptyName();
						
					itemArray.get(changeItemID).setItemName(newItemName);
				}
				
				else if (changeItemResponse == 2)
				{
					System.out.print("Please Enter What You Want to Change the Item's Weight To: ");
					int newItemWeight = scan.nextInt();
					scan.nextLine();
					itemArray.get(changeItemID).setItemWeight(newItemWeight);
				}
				
				else if (changeItemResponse == 3)
				{
					System.out.print("Please Enter What You Want to Change the Item's Price Paid To: ");
					int newItemPricePaid = scan.nextInt();
					scan.nextLine();
					itemArray.get(changeItemID).setItemPricePaid(newItemPricePaid);
				}
				
				else if (changeItemResponse == 4)
				{
					System.out.print("Please Enter What You Want to Change the Item's For Sale Price To: ");
					int newItemSalePrice = scan.nextInt();
					scan.nextLine();
					itemArray.get(changeItemID).setItemForSalePrice(newItemSalePrice);
				}
				
				else if (changeItemResponse == 5)
				{
					System.out.print("Please Enter What You Want to Change the Item's Description To: " );
					String newItemDescription = scan.nextLine();
					itemArray.get(changeItemID).setItemDescription(newItemDescription);
				}
				
				else if (changeItemResponse == 6)
				{
					//Changes inventory level in case inventory level needs to be adjusted due to donations or warehouse loss of inventory.  
					//The code for Make a Sale automatically decreases the amount in inventory by how much the customer bought. 
					System.out.print("Please Enter What You Want to Change the Item's Inventory Level To: ");
					int newItemInventoryLevel = scan.nextInt();
					scan.nextLine();
					itemArray.get(changeItemID).setItemInventoryLevel(newItemInventoryLevel);
				}
				
				else if (changeItemResponse == 7)
				{
					//Lists the vendors andrecords the ID of what vendor to change the Item's Vendor to.
					//Useful if a vendor stops selling a certain product, or if another vendor is wanted to sell the produce. 
					System.out.println("\nLIST OF VENDORS:");
					System.out.println("----------------------------");
					System.out.println("Vendor ID:\tVendor Name:");
					System.out.println("----------------------------");					
					for (int i = 0; i < vendorArray.size(); i++)
					{
						System.out.println(vendorArray.get(i).getVendorID() + "\t\t" + vendorArray.get(i).getVendorName());
					}
					System.out.print("\nPlease Enter The Vendor ID That You Want to Change the Item's Vendor To: ");
					int newItemVendor = scan.nextInt();
					scan.nextLine();
					newItemVendor -= 400;
					itemArray.get(changeItemID).setItemVendor(vendorArray.get(newItemVendor));
				}
				
				else
				{
					System.out.println("Incorrect Change Item Response Selected.  Please Press 4 at the Main Menu and Try Again");
				}  

			}
			
			else if (mainMenuResponse == 5)
			{
				//We define a transaction as a list of muiltiple sales.   A transaction may have one or muiltiple sale. 
				//An individual transaction has a customer, a date,  a list of sales, and a transaction cost. 
				//A sale includes an item, a quantity, and a sale cost. 
				//This menu option makes a temporary array to hold sales.  This will later be added to a transaction.  
				//This menu option keeps adding sales until a user is done adding sales. Then ask if they want a reciept for the transaction. 
				double transactionCost = 0;
				ArrayList<Sale> tempSaleArray = new ArrayList<Sale>(50);
				tempSaleArray.clear();
				int moreSalesResponse = 2;
				int recieptResponse = 2;
				System.out.println("You Have Selected Add a New Transaction (Consists of One or Muiltiple Sales");
				
				System.out.println("\nLIST OF CUSTOMERS:");
				System.out.println("------------------------------");
				System.out.println("Customer ID:\tCustomer Name:\t ");
				System.out.println("------------------------------");		

				for (int i = 0; i < customerArray.size(); i++)
				{
					System.out.println(customerArray.get(i).getCustomerID() + "\t\t" + customerArray.get(i).getCustomerFirstandLast());

				}
										
				System.out.print("\nPlease Enter the Customer ID for the Transaction: ");
				int customerResponse = scan.nextInt();
				scan.nextLine();

				
				if (customerResponse > 100)
				{
					customerResponse -= 100; //Access the array index position for a contractor by - 100
				}
				
				System.out.print("Please Enter the Date of the Transaction: ");
				String dateResponse = scan.nextLine();
				
				while (moreSalesResponse != 0)
				{					
					System.out.println("\nLIST OF ITEMS:");
					System.out.println("--------------------------");
					System.out.println("Item ID:\tItem Name:");
					System.out.println("--------------------------");	
					for (int i = 0; i < itemArray.size(); i++)
					{
						System.out.println(itemArray.get(i).getItemID() + "\t\t" + itemArray.get(i).getItemName());
					}
					
					System.out.print("\nPlease enter the Item ID Number for the Sale: ");
					int itemResponse = scan.nextInt();
					scan.nextLine();

					itemResponse -= 200;
					
					System.out.print("Please Enter the Quantity of Items Purchased for the Sale: ");
					int quantityResponse = scan.nextInt();
					scan.nextLine();
					

					//If quantity is negative, it keeps asking for a new value until the value entered is positive. 
					if (quantityResponse < 0)
						quantityResponse = saleArray.get(0).fixANegativeSaleBalance();
							
					//Checks to see how much inventory is in the system.  If the quantity wanted is greater than existing inventory, a new quantity is asked for until the quantity asked for is less than the existing inventory. 			
					while (quantityResponse > itemArray.get(itemResponse).getItemInventoryLevel())
					{
						System.out.println("The amount of this product in inventory is: " + itemArray.get(itemResponse).getItemInventoryLevel());
						System.out.println("Please Enter a Sale Quantity of Less Than This Amount");
						System.out.print("Please Enter the Quantity of Items Purchased for the Sale: ");
						quantityResponse = scan.nextInt();
						scan.nextLine();

					}
					
					//Gets the current inventory level and sets the new one by subtracting the quantity of the item sold 
					int tempInventoryLevel = itemArray.get(itemResponse).getItemInventoryLevel();
					tempInventoryLevel -= quantityResponse;
					itemArray.get(itemResponse).setItemInventoryLevel(tempInventoryLevel);
							
					//Make a new sale with gathered data.  Store in the sale array. 
					Sale tempSale = new Sale (customerArray.get(customerResponse), itemArray.get(itemResponse), quantityResponse, dateResponse);
					saleArray.add(tempSale);
					tempSaleArray.add(tempSale);
					
					//Add cost of sale to cost of transaction 
					//transactionCost += (quantityResponse * itemArray.get(itemResponse).getItemForSalePrice());
					transactionCost += tempSale.getSaleCost();
					
					System.out.println("Would You Like to Purchase More Items?");
					System.out.println("\t0: If You Are Finished and Do Not Have Any More Items to Purchase");
					System.out.println("\t1: If You Would like to Add More Items");
					System.out.print("Please Select 0 or 1: ");
					moreSalesResponse = scan.nextInt();
					scan.nextLine();

				}
				//Make a new transaction with gathered data. Store in transaction array. 	
				Transaction tempTransaction = new Transaction (customerArray.get(customerResponse), tempSaleArray, dateResponse, transactionCost);
				transactionArray.add(tempTransaction);			
				
				System.out.println("Would You Like A Reciept of This Transaction (Consisting of One or Muiltiple Sales)");
				System.out.println("\t0: No Reciept Wanted");
				System.out.println("\t1: Reciept Wanted");
				System.out.print("Please Select 0 or 1: ");
				recieptResponse = scan.nextInt();	
				scan.nextLine();

				
				if (recieptResponse == 1)
				{
					System.out.println("\nTRANSACTION RECIEPT:");
					System.out.println(transactionArray.get(transactionArray.size()-1).toString());
				}
			}
			
			else if (mainMenuResponse == 6)
			{
				//System asks for new vendor attributes and stores this data. 
				System.out.println("You Have Selected Add a New Vendor");
				System.out.print("Enter the Vendor's Name: " );
				String vendorName = scan.nextLine();
				if (vendorName.isEmpty() == true)
					vendorName = fillAnEmptyName();
				
				System.out.print("Enter the Vendor's Address: ");
				String vendorAddress = scan.nextLine();
				System.out.print("Enter the Vendor's Phone (10 Digits): ");	
				String vendorPhone = scan.nextLine();
				
				while (vendorPhone.length() != 10)
				{
					System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
					System.out.print("Enter the Vendor's Phone (10 Digits): ");	
					vendorPhone = scan.nextLine();
				}
				
				//Make a new vendor with stored data and store in vendor array.  
				Vendor tempVendor = new Vendor(vendorName, vendorAddress, vendorPhone);
				vendorArray.add(tempVendor);
			}
			
			else if (mainMenuResponse == 7)
			{
				//Edit a vendor's data
				//System prints all vendors, user selects the vendor to change attributes of. 
				//System asks for what attribute needs to be changed.  
				//System asks for what this attribute needs to be changed to. 
				//System changes it. 
				System.out.println("You Have Selected Edit a Vendor's Data");
				System.out.println("\nLIST OF VENDORS:");
				System.out.println("----------------------------");
				System.out.println("Vendor ID:\tVendor Name:");
				System.out.println("----------------------------");
			
				for (int i = 0; i < vendorArray.size();i++)
				{
					System.out.println(vendorArray.get(i).getVendorID() + "\t\t" + vendorArray.get(i).getVendorName());
				}
				
				System.out.print("\nPlease Select the ID of the Vendor You Would Like to Change: ");
				int changeVendorID = scan.nextInt();
				scan.nextLine();
				changeVendorID -= 400;
				System.out.println("Please Select Which Customer Aspect You Would Like to Change");
				System.out.println("\t1: Change the Vendor's Name");
				System.out.println("\t2: Change the Vendor's Address");
				System.out.println("\t3: Change the Vendor's Phone");
				System.out.print("Please Enter 1-3: ");
				int changeVendorResponse = scan.nextInt();
				scan.nextLine();
						
				if (changeVendorResponse == 1)
				{
					System.out.print("Please Enter What You Want to Change the Vendor's Name to: " );
					String newVendorName = scan.nextLine();
					if (newVendorName.isEmpty() == true)
						newVendorName = fillAnEmptyName();
					
					vendorArray.get(changeVendorID).setVendorName(newVendorName);
				}
							
				else if (changeVendorResponse == 2)
				{
					System.out.print("Please Enter What You Want to Change the Vedor's Address to: " );
					String newVendorAddress = scan.nextLine();
					vendorArray.get(changeVendorID).setVendorAddress(newVendorAddress);
				}
					
				else if (changeVendorResponse == 3)
				{
					System.out.print("Please Enter What You What to Change the Vendor's Phone to (10 Digits): " );
					String newVendorPhone = scan.nextLine();
										
					while (newVendorPhone.length() != 10)
					{
						System.out.println("INCORRECT ENTRY: Phone Must Be 10 Numbers In Length");
						System.out.print("Please Enter What You What to Change the Vendor's Phone to (10 Digits): ");
						newVendorPhone = scan.nextLine(); 
					}
					
					vendorArray.get(changeVendorID).setVendorPhone(newVendorPhone);
				}
				
				else 
				{
					System.out.print("Incorrect Change Vendor Attribute Selected.  Please Select 7 From the Main Menu and Try Again");
				}

			}
			
			else if (mainMenuResponse == 8)
			{
				System.out.println("Welcome to Valley Depot IS Report Menu ");
				System.out.println("Please select your choice of the following report options: ");
				System.out.println("\t1- Report 1: Customer Purchase History");
				System.out.println("\t2- Report 2: Item Purchase History");
				System.out.println("\t3- Report 3: Current Inventory Levels");
				System.out.print("Please enter your report selection: ");
				int reportMenuResponse = scan.nextInt();
				scan.nextLine();

				
				if (reportMenuResponse == 1) 
				{
					//Select a certain customer from a list of all customers.  .  
					System.out.println("You have Selected Report 1: Customer Purchase History");				
					System.out.println("\nLIST OF CUSTOMERS:");
					System.out.println("------------------------------");
					System.out.println("Customer ID:\tCustomer Name:\t ");
					System.out.println("------------------------------");	

					for (int i = 0; i < customerArray.size(); i++)
					{
						System.out.println(customerArray.get(i).getCustomerID() + "\t\t" + customerArray.get(i).getCustomerFirstandLast());

					}
					
					System.out.print("\nEnter the Customer ID for which you want the Purchase History For: ");
					int customerResponse = scan.nextInt();
					scan.nextLine();
					System.out.println("\nCUSTOMER PURCHASE HISTORY: ");
					boolean customerHasATransaction = false;
					
					//If a customer has no transactions, a statement will display stating this fact
					for (int i = 0; i < transactionArray.size(); i++)
					{
						if (customerResponse == transactionArray.get(i).getCustomerInTransaction().getCustomerID())
						{
							customerHasATransaction = true;
						}
					}
					
					if (customerHasATransaction == false)
					{
						System.out.println("\tNo Transactions Exist for This Customer\n");
					}
					
					//Call the toString method for each transaction the customer has to print all attributes of the transaction and the sales it has
					for (int i = 0; i < transactionArray.size(); i++)
					{
						if (customerResponse == transactionArray.get(i).getCustomerInTransaction().getCustomerID())
						{
							System.out.println(transactionArray.get(i).toString());
						}
					}
				}
				
				else if (reportMenuResponse ==2)
				{
					//User selects a certain item from a list of all items
					System.out.println("You have Selected Report 2: Item Purchase History");					
					System.out.println("\nLIST OF ITEMS:");
					System.out.println("--------------------------");
					System.out.println("Item ID:\tItem Name:");
					System.out.println("--------------------------");	

					for (int i = 0; i < itemArray.size(); i++)
					{
						System.out.println(itemArray.get(i).getItemID() + "\t\t" + itemArray.get(i).getItemName());
					}
					
					System.out.print("\nEnter the Item ID for which you want the Purchase History For: ");
					int itemResponse = scan.nextInt();
					scan.nextLine();
					System.out.println("\nITEM PURCHASE HISTORY: ");

					//For each time the selected item is used in a sale, the system uses the toString method to list certain attributes about that sale. 
					System.out.println(saleArray.get(0).purchaseHistoryHeader());
					for (int i = 0; i < saleArray.size(); i++)
					{
						if (itemResponse == saleArray.get(i).getItemInSale().getItemID())
						{
							System.out.println(saleArray.get(i).purchaseHistory());		
						}
					}
					System.out.println("");
				}
				
				else if (reportMenuResponse ==3)
				{
					//Prints Item ID, Name, and Inventory Level for each Item in the system. 
					System.out.println("You have Selected Report 3: Current Inventory Levels");
					System.out.println("\nCURRENT INVENTORY LEVELS: ");
					System.out.println("-----------------------------------------------");
					System.out.println("Item ID:\tItem Name:\tItem Inventory:");
					System.out.println("-----------------------------------------------");

					for (int i = 0; i < itemArray.size(); i++)
					{						
						System.out.println(itemArray.get(i).toString());
					}
				}
				
				else
				{
					System.out.print("Incorrect Report Menu Option Selected.  Please Press 8 on the Main Menu and Try Again");
				}
			}
						
			else if (mainMenuResponse != 0)
			{
				System.out.println("SYSTEM ERROR: Incorrect Main Menu Option Selected.  Please try again. ");
			}
		}
		System.out.println("You have now exited the application. Please have a great day!");
	}
	
	public static String fillAnEmptyName()
	{
		//Keeps asking for a new name until the name is not blank. 
		Scanner scan = new Scanner(System.in);
		System.out.println("INCORRECT ENTRY: Name Entered Cannot Be Blank");
		System.out.print ("Please Enter The Name Again: ");
		String newString = scan.nextLine();
	
		while (newString.isEmpty() == true)
		{
			System.out.println("INCORRECT ENTRY: Name Entered Cannot Be Blank");
			System.out.print ("Please Enter The Name Again: ");
			newString = scan.nextLine();
		}
		
		return newString;
	}
}
	


    

